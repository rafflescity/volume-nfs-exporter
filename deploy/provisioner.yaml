kind: Namespace
apiVersion: v1
metadata:
  name: volume-nfs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: volume-nfs-provisoner
  namespace: volume-nfs
  labels:
    app: volume-nfs-provisoner
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: volume-nfs-provisoner
  template:
    metadata:
      labels:
        app: volume-nfs-provisoner
    spec:
      serviceAccount: volume-nfs-provisioner
      restartPolicy: Always
      terminationGracePeriodSeconds: 0
      containers:
      - name: provisioner
        image: daocloud.io/piraeus/volume-nfs-provisioner
        imagePullPolicy: Always
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          limits:
            cpu: '500m'
            memory: '500Mi'
        args: 
        - -name=nfs.volume.io      
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: volume-nfs-provisioner
  namespace: volume-nfs
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: volume-nfs-provisioner
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: volume-nfs-provisioner
subjects:
  - kind: ServiceAccount
    name: volume-nfs-provisioner
    namespace: volume-nfs
roleRef:
  kind: ClusterRole
  name: volume-nfs-provisioner
  apiGroup: rbac.authorization.k8s.io